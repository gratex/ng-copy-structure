{
	"name": "ng-copy-structure",
	"displayName": "ng-copy-structure",
	"description": "Visual Studio Code extension for copying folder structure.",
	"version": "1.4.0",
	"publisher": "adros1",
	"engines": {
		"vscode": "^1.54.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:ng-copy-structure.copy"
	],
	"main": "./out/extension.js",
	"icon": "images/icon-192x192.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/gratex/ng-copy-structure.git"
	},
	"contributes": {
		"commands": [
			{
				"command": "ng-copy-structure.copy",
				"title": "Copy structure"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "explorerResourceIsFolder",
					"command": "ng-copy-structure.copy"
				}
			]
		},
		"configuration": {
			"title": "Copy structure",
			"properties": {
				"ngCopyStructure.multipleReplaces.FILE NAME": {
					"type": "boolean",
					"default": true,
					"description": "If true, more than one file name replace may be defined"
				},
				"ngCopyStructure.multipleReplaces.CONTENT": {
					"type": "boolean",
					"default": true,
					"description": "If true, more than one content replace may be defined"
				},
				"ngCopyStructure.transform": {
					"type": "string",
					"editPresentation": "multilineText",
					"default": "(name) => name.replace(/(^|-)(.)/g, (m, p1, p2) => p2.toLocaleUpperCase())",
					"description": "Transform function from first file name replace to first content replace default value. If empty, no default value prefilled."
				},
				"ngCopyStructure.allReplaces.ALL REPLACES": {
					"type": "object",
					"additionalProperties": false,
					"required": [
						"nameReplaces",
						"contentReplaces"
					],
					"properties": {
						"nameReplaces": {
							"type": "array",
							"items": {
								"type": "object",
								"required": [
									"search",
									"replace"
								],
								"additionalProperties": false,
								"properties": {
									"search": {
										"type": "string"
									},
									"replace": {
										"type": "string"
									}
								}
							}
						},
						"contentReplaces": {
							"type": "array",
							"items": {
								"type": "object",
								"required": [
									"search",
									"replace"
								],
								"additionalProperties": false,
								"properties": {
									"search": {
										"type": "string"
									},
									"replace": {
										"type": "string"
									}
								}
							}
						}
					},
					"default": {
						"ngCopyStructure.allReplaces.ALL REPLACES": {
							"nameReplaces": [
								{
									"search": "sample search",
									"replace": "sample replace"
								}
							],
							"contentReplaces": [
								{
									"search": "sample search",
									"replace": "sample replace"
								}
							]
						}
					},
					"description": "Edit all replaces at one place in json"
				},
				"ngCopyStructure.allReplaces.USE ALL REPLACES": {
					"type": "boolean",
					"default": true,
					"description": "Use all replaces from setting object"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"publish": "vsce publish"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/mocha": "^9.0.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.54.0",
		"@typescript-eslint/eslint-plugin": "^4.31.1",
		"@typescript-eslint/parser": "^4.31.1",
		"@vscode/test-electron": "^1.6.2",
		"eslint": "^7.32.0",
		"glob": "^7.1.7",
		"mocha": "^9.1.1",
		"typescript": "^4.4.3",
		"vsce": "^1.100.1"
	},
	"dependencies": {}
}
